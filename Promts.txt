контекст:
Нужен телеграм-бот на модуле PyTelegramBotAPI, который в будущем будет собирать анкеты пользователей и записывать их в базу данных. База данных уже существует и размещена на удалëнном сервере, подключение к ней осуществляется по логину и паролю. База данных пока состоит из одной таблицы, информацию о структуре таблицы возьми из dump.xml

реализация:
Сделай телеграм-бота на pyTelegramBotAPI, который подключается к удалëнной базе данных через отдельный модуль. В основном файле должен быть только код бота и хендлеры. Подключение к базе и работа с SQL должны быть полностью вынесены в отдельный модуль. Не нужно описывать таблицы вручную, используй информацию из dump.xml. Пока не реализовывай анкету, просто добавь хендлер-заглушку и место под это. Код должен быть чистым, читаемым и разделëнным по смыслу, добавь подробные комментарии в код. Ключ для подключения к боту, пароли и ссылки для подключения к базе будут в файле .env, создай .env файл-шаблон, в который я позже внесу сектетную информацию.







контекст:
В телеграм-боте уже реализовано подключение к удалëнной базе данных и успешная запись информации пользователей. Теперь требуется настроить дополнительное резервное копирование данных. Все новые записи должны не только сохраняться в базу, но и дублироваться в локальный Excel-файл, который хранится в корневой папке проекта. Это создаëт резервную копию данных на случай потери доступа к удалëнной базе.

Реализация:
Добавь в проект сохранение всех новых данных из телеграм-бота в Excel-файл, используя подходящие модули. Файл должен автоматически создаваться, если его ещë нет и обновляться при каждом новом сохранении в базу. Работа с Excel должна происходить параллельно с основной записью в базу и не мешать еë работе. Вынеси всю логику работы с Excel в отдельный модуль по аналогии с модулем базы данных. Формат Excel-таблицы должен соответствовать структуре основной таблицы в базе.